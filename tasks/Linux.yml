---
- name: Get Apache nifi package stat (local).
  local_action: stat path={{ nifi_download_dir }}/nifi-{{ nifi.major_version }}.{{ nifi.minor_version }}.{{ nifi.patch_version }}-bin.tar.gz get_md5=yes
  register: nifi_pkg
  ignore_errors: true
  tags:
    - nifi

- name: Download nifi package (local).
  local_action: command curl
    --location
    --insecure
    --remote-name
    --cookie-jar {{ nifi_download_dir }}/nifi-{{ nifi.major_version }}.{{ nifi.minor_version }}.{{ nifi.patch_version }}-bin.tar.gz.cookie
    {{ nifi_base_mirror }}/nifi-{{ nifi.major_version }}.{{ nifi.minor_version }}.{{ nifi.patch_version }}-bin.tar.gz
    chdir={{ nifi_download_dir }}
  when: not nifi_pkg.stat.exists or nifi_pkg.stat.md5 != "{{ nifi.linux_md5_checksum }}"
  tags:
    - nifi

- name: Check nifi install dir {{ nifi_install_dir }}.
  file: state=directory mode=0755 path={{ nifi_install_dir }}
  tags: nifi

- name: Install nifi to remote node.
  unarchive:
    src={{ nifi_download_dir }}/nifi-{{ nifi.major_version }}.{{ nifi.minor_version }}.{{ nifi.patch_version }}-bin.tar.gz
    dest={{ nifi_install_dir }}
    mode=0755
    creates={{ nifi_install_dir }}/{{ nifi_dir_name }}
  tags: nifi

- name: Create directories require.
  file: path={{ nifi_install_dir }}/{{item }} state=directory mode=0775
  with_items:
    - content_repository
    - database_repository
    - flowfile_repository
    - logs
    - provenance_repository
    - work
  tags: nifi

- name: Copy files keystore and trustestore.
  copy:
    src: "{{ nifi_download_dir }}/pki/{{ nifi_authorizer_dn }}/{{ inventory_hostname }}"
    dest: "{{ nifi_install_dir }}/jks"
  when: nifi_auto_keystore
  notify: clear auth_Linux
  tags: nifi

- name: Create nifi zookeeper state directory {{ nifi_install_dir }}/state/zookeeper.
  file: path={{ nifi_install_dir }}/state/zookeeper state=directory mode=0775
  tags: nifi

- name: Create ID Zookeeper by node. 
  template: src=templates/myid.j2 dest={{ nifi_install_dir }}/state/zookeeper/myid
  tags: nifi

- name: Create nifi conf directory {{ nifi_install_dir }}/conf.
  file: path={{ nifi_install_dir }}/conf state=directory mode=0775
  tags: nifi

- name: Copy template to remote node.
  template: src={{ item }} dest={{ nifi_install_dir }}/conf/{{ item | basename | regex_replace('.j2','') }}
  with_fileglob:
   - templates/{{ nifi_secure }}/*.j2
  notify:
   - install nifi_Linux
   - restart nifi_Linux
  tags: nifi
