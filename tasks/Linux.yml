---
- name: Get Apache nifi package stat (local).
  local_action: stat path={{ nifi_download_dir }}/nifi-{{ nifi.major_version }}.{{ nifi.minor_version }}.{{ nifi.patch_version }}-bin.tar.gz get_md5=yes
  register: nifi_pkg
  ignore_errors: true
  tags:
    - nifi

- name: Download nifi package (local).
  local_action: command curl
    --location
    --insecure
    --remote-name
    --cookie-jar {{ nifi_download_dir }}/nifi-{{ nifi.major_version }}.{{ nifi.minor_version }}.{{ nifi.patch_version }}-bin.tar.gz.cookie
    {{ nifi_base_mirror }}/nifi-{{ nifi.major_version }}.{{ nifi.minor_version }}.{{ nifi.patch_version }}-bin.tar.gz
    chdir={{ nifi_download_dir }}
  when: not nifi_pkg.stat.exists or nifi_pkg.stat.md5 != "{{ nifi.linux_md5_checksum }}"
  tags:
    - nifi

- name: Set Group Apache Nifi.
  group: name={{ nifi_group }} state=present
  tags: nifi

- name: Set User Apache Nifi.
  user:
    name: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
    home: "{{ nifi_install_dir }}"
    state: present
    system: yes
  tags: nifi

- name: Check nifi install dir {{ nifi_install_dir }}.
  file: state=directory mode=0755 owner={{ nifi_user }} group={{ nifi_group }} path={{ nifi_install_dir }}
  tags: nifi

- name: Install nifi to remote node.
  unarchive:
    src={{ nifi_download_dir }}/nifi-{{ nifi.major_version }}.{{ nifi.minor_version }}.{{ nifi.patch_version }}-bin.tar.gz
    dest={{ nifi_install_dir }}
    creates={{ nifi_install_dir }}/{{ nifi_dir_name }}
  tags: nifi

- name: Change permissions base Apache Nifi directory.
  file: dest={{ nifi_install_dir }}/{{ nifi_dir_name }} owner={{ nifi_user }} group={{ nifi_group }} recurse=yes
  tags: nifi

- name: Create directories conf require.
  file: path={{ nifi_install_dir }}/conf/{{item }} state=directory mode=0775 owner={{ nifi_user }} group={{ nifi_group }} force=true
  with_items:
    - archive
    - templates
  tags: nifi

- name: Create directories data require.
  file: path={{ nifi_install_dir }}/data/{{item }} state=directory mode=0775 owner={{ nifi_user }} group={{ nifi_group }} force=true
  with_items:
    - content_repository
    - database_repository
    - flowfile_repository
    - provenance_repository
    - state
  tags: nifi

- name: Install nifi to remote node.
  file:
    src: "{{ nifi_install_dir }}/{{ nifi_dir_name }}"
    dest: "{{ nifi_install_dir }}/nifi-latest"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
    state: link
  tags: nifi

- name: Systemd nifi.service to remote node.
  template:
    src: "{{role_path}}/templates/systemd/nifi.service.j2"
    dest: /etc/systemd/system/{{nifi_service_name}}.service
    owner: root
    group: root
  notify:
   - reload systemd

- name: Enable service Apache nifi
  systemd:
    name: "{{nifi_service_name}}"
    enabled: yes
    state: started
  tags: nifi

- name: Copy files keystore and trustestore.
  copy:
    src: "{{ nifi_download_dir }}/pki/{{ nifi_authorizer_dn }}/{{ inventory_hostname }}"
    dest: "{{ nifi_install_dir }}/jks"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  when: nifi_auto_keystore
  tags: nifi

- name: Create directories {{ nifi_install_dir }}/data/state/zookeeper require.
  file: path={{ nifi_install_dir }}/data/state/zookeeper state=directory mode=0775 owner={{ nifi_user }} group={{ nifi_group }}
  tags: nifi

- name: Create ID Zookeeper by node. 
  template: src={{role_path}}/templates/main/state/myid.j2 dest={{ nifi_install_dir }}/data/state/zookeeper/myid owner={{ nifi_user }} group={{ nifi_group }}
  tags: nifi

- name: Copy authorized-users.xml to remote node.
  template: src={{role_path}}/templates/auth/authorized-users.xml.j2 dest={{ nifi_install_dir }}/conf/authorized-users.xml owner={{ nifi_user }} group={{ nifi_group }}
  notify:
   - clear auth_Linux
   - restart nifi_Linux
  tags: nifi

- name: Copy configurations to remote node.
  template: src={{ item }} dest={{ nifi_install_dir }}/{{ nifi_dir_name }}/conf/{{ item | basename | regex_replace('.j2','') }} owner={{ nifi_user }} group={{ nifi_group }}
  with_fileglob:
   - "{{role_path}}/templates/main/conf/*.j2"
   - "{{role_path}}/templates/auth/{{ nifi_secure }}/conf/*.j2"
  notify:
   - clear auth_Linux
   - restart nifi_Linux
  tags: nifi
